'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _classCallCheck = require('@babel/runtime/helpers/classCallCheck');
var _createClass = require('@babel/runtime/helpers/createClass');
var _inherits = require('@babel/runtime/helpers/inherits');
var _possibleConstructorReturn = require('@babel/runtime/helpers/possibleConstructorReturn');
var _getPrototypeOf = require('@babel/runtime/helpers/getPrototypeOf');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var ethers = require('ethers');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _assertThisInitialized = require('@babel/runtime/helpers/assertThisInitialized');
var _toArray = require('@babel/runtime/helpers/toArray');
var _typeof = require('@babel/runtime/helpers/typeof');
var abi$1 = require('@ethersproject/abi');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _regeneratorRuntime__default = /*#__PURE__*/_interopDefault(_regeneratorRuntime);

function resolveAddress(value) {
  if (typeof value === 'string') {
    return ethers.utils.getAddress(value);
  }

  if (Contract.isContract(value)) {
    return resolveAddress(value.address);
  }

  if (ethers.Signer.isSigner(value) && value.address) {
    return resolveAddress(value.address);
  }

  if (_typeof(value) === 'object' && typeof value.address === 'string') {
    return ethers.utils.getAddress(value.address);
  }

  throw new Error('Failed to resolve address');
}

function resolveArguments(params, value) {
  if (Array.isArray(params)) {
    return params.map(function (type, index) {
      var inner = Array.isArray(value) ? value[index] : value[type.name];
      return resolveArguments(type, inner);
    });
  }

  if (params.type === 'address') {
    return resolveAddress(value);
  }

  if (params.type === 'tuple') {
    return resolveArguments(params.components, value);
  }

  if (params.baseType === 'array') {
    if (!Array.isArray(value)) {
      throw new Error('Invalid array value');
    }

    return value.map(function (inner) {
      return resolveArguments(params.arrayChildren, inner);
    });
  }

  if (params.type.match(/^u?int/)) {
    return "".concat(ethers.BigNumber.from(value));
  }

  return value;
}

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function propertyOf(property) {
  var _property;

  var candidates = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var obj = candidates.find(function (obj) {
    return obj.hasOwnProperty(property);
  });
  return (_property = obj === null || obj === void 0 ? void 0 : obj[property]) !== null && _property !== void 0 ? _property : undefined;
}

function enhanceResponse(fn, response) {
  var wait = response.wait.bind(response);
  var enhanced = response;
  enhanced["function"] = fn;

  enhanced.wait = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee(confirmations) {
      var receipt, enhanced;
      return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return wait(confirmations);

            case 2:
              receipt = _context.sent;
              enhanced = receipt;
              enhanced["function"] = fn;
              return _context.abrupt("return", enhanced);

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return enhanced;
}

// TODO: Use param types to validate this instead.
function isFunctionOptions(value) {
  if (_typeof(value) === 'object' && !Array.isArray(value)) {
    if (ethers.BigNumber.isBigNumber(value)) {
      return false;
    }

    if (ethers.Signer.isSigner(value)) {
      return false;
    }

    if (Contract.isContract(value)) {
      return false;
    }

    var keys = Object.keys(value);
    var allowed = ['args', 'value', 'nonce', 'gas', 'price', 'block', 'from', 'bytecode'];

    if (!keys.every(function (key) {
      return allowed.includes(key);
    })) {
      throw new Error('Invalid options');
    }

    return true;
  }

  return false;
}
function resolveFunctionOptions() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var _ref2 = args || [],
      _ref3 = _toArray(_ref2),
      first = _ref3[0],
      rest = _ref3.slice(1);

  if (rest.length === 0 && isFunctionOptions(first)) {
    return first;
  }

  return {
    args: args
  };
}
var ContractFunction = /*#__PURE__*/function () {
  function ContractFunction(contract, fragment) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    _classCallCheck(this, ContractFunction);

    this.contract = contract;
    this.fragment = fragment;
    this.options = options;

    _defineProperty(this, "__TYPE__", 'FUNCTION');
  }

  _createClass(ContractFunction, [{
    key: "ref",
    get: function get() {
      return this.refine();
    }
  }, {
    key: "args",
    value: function args() {
      for (var _len2 = arguments.length, _args2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        _args2[_key2] = arguments[_key2];
      }

      return this.refine({
        args: _args2
      });
    }
  }, {
    key: "value",
    value: function value(_value) {
      return this.refine({
        value: _value
      });
    }
  }, {
    key: "bytecode",
    value: function bytecode(_bytecode) {
      return this.refine({
        bytecode: _bytecode
      });
    }
  }, {
    key: "nonce",
    value: function nonce(_nonce) {
      return this.refine({
        nonce: _nonce
      });
    }
  }, {
    key: "block",
    value: function block(_block) {
      return this.refine({
        block: _block
      });
    }
  }, {
    key: "gas",
    value: function gas(limit, price) {
      return this.refine({
        gas: limit,
        price: price
      });
    }
  }, {
    key: "from",
    value: function from(_from) {
      return this.refine({
        from: _from
      });
    }
  }, {
    key: "refine",
    value: function refine() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var args = propertyOf('args', [options, this.options]);
      var value = propertyOf('value', [options, this.options]);
      var gas = propertyOf('gas', [options, this.options]);
      var price = propertyOf('price', [options, this.options]);
      var nonce = propertyOf('nonce', [options, this.options]);
      var block = propertyOf('block', [options, this.options]);
      var bytecode = propertyOf('bytecode', [options, this.options]);
      var from = propertyOf('from', [options, this.options]);
      return new this.constructor(this.contract, this.fragment, {
        args: args,
        block: block,
        bytecode: bytecode,
        from: from,
        gas: gas,
        nonce: nonce,
        price: price,
        value: value
      });
    }
  }], [{
    key: "isContractFunction",
    value: function isContractFunction(fn) {
      var _fn$__TYPE__;

      return fn === null || fn === void 0 ? void 0 : (_fn$__TYPE__ = fn.__TYPE__) === null || _fn$__TYPE__ === void 0 ? void 0 : _fn$__TYPE__.startsWith('FUNCTION');
    }
  }, {
    key: "create",
    value: function create(contract, fragment) {
      for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
        args[_key3 - 2] = arguments[_key3];
      }

      var options = resolveFunctionOptions.apply(void 0, args);

      if (abi$1.FunctionFragment.isFunctionFragment(fragment)) {
        if (fragment.constant) {
          return new CallFunction(contract, fragment, options);
        }

        return new SendFunction(contract, fragment, options);
      }

      if (abi$1.FunctionFragment.isConstructorFragment(fragment)) {
        return new ConstructorFunction(contract, fragment, options);
      }

      throw new Error('Invalid fragment');
    }
  }]);

  return ContractFunction;
}();
var CallFunction = /*#__PURE__*/function (_ContractFunction) {
  _inherits(CallFunction, _ContractFunction);

  var _super = _createSuper$2(CallFunction);

  function CallFunction() {
    var _this;

    _classCallCheck(this, CallFunction);

    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__TYPE__", 'FUNCTION:CALL');

    _defineProperty(_assertThisInitialized(_this), "populated", void 0);

    return _this;
  }

  _createClass(CallFunction, [{
    key: "call",
    value: function () {
      var _call = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee2() {
        var _this$fragment$output;

        var tx, response, result;
        return _regeneratorRuntime__default['default'].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.populate();

              case 2:
                tx = _context2.sent;

                if (!(this.contract.provider == null)) {
                  _context2.next = 5;
                  break;
                }

                throw new Error('Missing provider');

              case 5:
                _context2.next = 7;
                return this.contract.provider.call(tx);

              case 7:
                response = _context2.sent;
                result = this.contract.abi.decodeFunctionResult(this.fragment, response);

                if (!(((_this$fragment$output = this.fragment.outputs) === null || _this$fragment$output === void 0 ? void 0 : _this$fragment$output.length) === 1)) {
                  _context2.next = 11;
                  break;
                }

                return _context2.abrupt("return", result[0]);

              case 11:
                return _context2.abrupt("return", result);

              case 12:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function call() {
        return _call.apply(this, arguments);
      }

      return call;
    }()
  }, {
    key: "attach",
    value: function attach(contract) {
      var formatted = this.fragment.format();

      if (!contract.abi.functions.hasOwnProperty(formatted)) {
        throw new Error('Failed to attach function to incompatible contract');
      }

      return new this.constructor(contract, this.fragment, this.options);
    }
  }, {
    key: "populate",
    value: function () {
      var _populate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee4() {
        var _this2 = this;

        var refresh,
            _args5 = arguments;
        return _regeneratorRuntime__default['default'].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                refresh = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : false;

                if (!this.populated || refresh) {
                  this.populated = new Promise( /*#__PURE__*/function () {
                    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee3(resolve, reject) {
                      var inputs, args, data, from;
                      return _regeneratorRuntime__default['default'].wrap(function _callee3$(_context3) {
                        while (1) {
                          switch (_context3.prev = _context3.next) {
                            case 0:
                              _context3.prev = 0;
                              inputs = _this2.fragment.inputs;
                              args = resolveArguments(inputs, _this2.options.args);
                              data = _this2.contract.abi.encodeFunctionData(_this2.fragment, args);

                              if (!_this2.options.from) {
                                _context3.next = 8;
                                break;
                              }

                              _context3.t0 = _this2.options.from;
                              _context3.next = 16;
                              break;

                            case 8:
                              if (!(typeof _this2.options.from === 'undefined' && _this2.contract.signer)) {
                                _context3.next = 14;
                                break;
                              }

                              _context3.next = 11;
                              return _this2.contract.signer.getAddress();

                            case 11:
                              _context3.t1 = _context3.sent;
                              _context3.next = 15;
                              break;

                            case 14:
                              _context3.t1 = undefined;

                            case 15:
                              _context3.t0 = _context3.t1;

                            case 16:
                              from = _context3.t0;
                              resolve(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({
                                data: data,
                                to: _this2.contract.address
                              }, from && {
                                from: resolveAddress(from)
                              }), _this2.options.nonce && {
                                nonce: ethers.BigNumber.from(_this2.options.nonce).toNumber()
                              }), _this2.options.value && {
                                value: ethers.BigNumber.from(_this2.options.value)
                              }), _this2.options.price && {
                                gasPrice: ethers.BigNumber.from(_this2.options.price)
                              }), _this2.options.gas && {
                                gasLimit: ethers.BigNumber.from(_this2.options.gas)
                              }));
                              _context3.next = 23;
                              break;

                            case 20:
                              _context3.prev = 20;
                              _context3.t2 = _context3["catch"](0);
                              reject(_context3.t2);

                            case 23:
                            case "end":
                              return _context3.stop();
                          }
                        }
                      }, _callee3, null, [[0, 20]]);
                    }));

                    return function (_x2, _x3) {
                      return _ref4.apply(this, arguments);
                    };
                  }());
                }

                return _context4.abrupt("return", this.populated);

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function populate() {
        return _populate.apply(this, arguments);
      }

      return populate;
    }()
  }], [{
    key: "isCallFunction",
    value: function isCallFunction(fn) {
      return (fn === null || fn === void 0 ? void 0 : fn.__TYPE__) === 'FUNCTION:CALL';
    }
  }]);

  return CallFunction;
}(ContractFunction);
var SendFunction = /*#__PURE__*/function (_CallFunction) {
  _inherits(SendFunction, _CallFunction);

  var _super2 = _createSuper$2(SendFunction);

  function SendFunction() {
    var _this3;

    _classCallCheck(this, SendFunction);

    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    _this3 = _super2.call.apply(_super2, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this3), "__TYPE__", 'FUNCTION:SEND');

    return _this3;
  }

  _createClass(SendFunction, [{
    key: "estimate",
    value: function () {
      var _estimate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee5() {
        var tx;
        return _regeneratorRuntime__default['default'].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.populate();

              case 2:
                tx = _context5.sent;

                if (!(this.contract.provider == null)) {
                  _context5.next = 5;
                  break;
                }

                throw new Error('Missing provider');

              case 5:
                return _context5.abrupt("return", this.contract.provider.estimateGas(tx));

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function estimate() {
        return _estimate.apply(this, arguments);
      }

      return estimate;
    }()
  }, {
    key: "send",
    value: function () {
      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee6() {
        var wait,
            populated,
            response,
            enhanced,
            _args7 = arguments;
        return _regeneratorRuntime__default['default'].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                wait = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : true;

                if (this.contract.signer) {
                  _context6.next = 3;
                  break;
                }

                throw new Error('Missing signer');

              case 3:
                _context6.next = 5;
                return this.populate();

              case 5:
                populated = _context6.sent;
                _context6.next = 8;
                return this.contract.signer.sendTransaction(populated);

              case 8:
                response = _context6.sent;
                enhanced = enhanceResponse(this, response);

                if (wait) {
                  _context6.next = 12;
                  break;
                }

                return _context6.abrupt("return", enhanced);

              case 12:
                return _context6.abrupt("return", enhanced.wait());

              case 13:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function send() {
        return _send.apply(this, arguments);
      }

      return send;
    }()
  }], [{
    key: "isSendFunction",
    value: function isSendFunction(fn) {
      return (fn === null || fn === void 0 ? void 0 : fn.__TYPE__) === 'FUNCTION:SEND';
    }
  }]);

  return SendFunction;
}(CallFunction);
var ConstructorFunction = /*#__PURE__*/function (_ContractFunction2) {
  _inherits(ConstructorFunction, _ContractFunction2);

  var _super3 = _createSuper$2(ConstructorFunction);

  function ConstructorFunction() {
    var _this4;

    _classCallCheck(this, ConstructorFunction);

    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }

    _this4 = _super3.call.apply(_super3, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this4), "__TYPE__", 'FUNCTION:CONSTRUCTOR');

    _defineProperty(_assertThisInitialized(_this4), "populated", void 0);

    return _this4;
  }

  _createClass(ConstructorFunction, [{
    key: "call",
    value: function () {
      var _call2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee7() {
        var tx;
        return _regeneratorRuntime__default['default'].wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.populate();

              case 2:
                tx = _context7.sent;

                if (!(this.contract.provider == null)) {
                  _context7.next = 5;
                  break;
                }

                throw new Error('Missing provider');

              case 5:
                return _context7.abrupt("return", this.contract.provider.call(tx));

              case 6:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function call() {
        return _call2.apply(this, arguments);
      }

      return call;
    }()
  }, {
    key: "estimate",
    value: function () {
      var _estimate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee8() {
        var tx;
        return _regeneratorRuntime__default['default'].wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.populate();

              case 2:
                tx = _context8.sent;

                if (!(this.contract.provider == null)) {
                  _context8.next = 5;
                  break;
                }

                throw new Error('Missing provider');

              case 5:
                return _context8.abrupt("return", this.contract.provider.estimateGas(tx));

              case 6:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function estimate() {
        return _estimate2.apply(this, arguments);
      }

      return estimate;
    }()
  }, {
    key: "send",
    value: function () {
      var _send2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee9() {
        var wait,
            populated,
            response,
            enhanced,
            _args10 = arguments;
        return _regeneratorRuntime__default['default'].wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                wait = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : true;

                if (this.contract.signer) {
                  _context9.next = 3;
                  break;
                }

                throw new Error('Missing signer');

              case 3:
                _context9.next = 5;
                return this.populate();

              case 5:
                populated = _context9.sent;
                _context9.next = 8;
                return this.contract.signer.sendTransaction(populated);

              case 8:
                response = _context9.sent;
                enhanced = enhanceResponse(this, response);

                if (wait) {
                  _context9.next = 12;
                  break;
                }

                return _context9.abrupt("return", enhanced);

              case 12:
                return _context9.abrupt("return", enhanced.wait());

              case 13:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function send() {
        return _send2.apply(this, arguments);
      }

      return send;
    }()
  }, {
    key: "populate",
    value: function () {
      var _populate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee11() {
        var _this5 = this;

        var refresh,
            _args12 = arguments;
        return _regeneratorRuntime__default['default'].wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                refresh = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : false;

                if (!this.populated || refresh) {
                  this.populated = new Promise( /*#__PURE__*/function () {
                    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee10(resolve, reject) {
                      var inputs, args, data, from;
                      return _regeneratorRuntime__default['default'].wrap(function _callee10$(_context10) {
                        while (1) {
                          switch (_context10.prev = _context10.next) {
                            case 0:
                              _context10.prev = 0;

                              if (_this5.options.bytecode) {
                                _context10.next = 3;
                                break;
                              }

                              throw new Error('Missing bytecode');

                            case 3:
                              inputs = _this5.fragment.inputs;
                              args = resolveArguments(inputs, _this5.options.args); // Set the data to the bytecode + the encoded constructor arguments

                              data = ethers.utils.hexlify(ethers.utils.concat([_this5.options.bytecode, _this5.contract.abi.encodeDeploy(args)]));

                              if (!_this5.options.from) {
                                _context10.next = 10;
                                break;
                              }

                              _context10.t0 = _this5.options.from;
                              _context10.next = 18;
                              break;

                            case 10:
                              if (!(typeof _this5.options.from === 'undefined' && _this5.contract.signer)) {
                                _context10.next = 16;
                                break;
                              }

                              _context10.next = 13;
                              return _this5.contract.signer.getAddress();

                            case 13:
                              _context10.t1 = _context10.sent;
                              _context10.next = 17;
                              break;

                            case 16:
                              _context10.t1 = undefined;

                            case 17:
                              _context10.t0 = _context10.t1;

                            case 18:
                              from = _context10.t0;
                              resolve(_objectSpread(_objectSpread(_objectSpread(_objectSpread({
                                data: data
                              }, from && {
                                from: resolveAddress(from)
                              }), _this5.options.nonce && {
                                nonce: ethers.BigNumber.from(_this5.options.nonce).toNumber()
                              }), _this5.options.price && {
                                gasPrice: ethers.BigNumber.from(_this5.options.price)
                              }), _this5.options.gas && {
                                gasLimit: ethers.BigNumber.from(_this5.options.gas)
                              }));
                              _context10.next = 25;
                              break;

                            case 22:
                              _context10.prev = 22;
                              _context10.t2 = _context10["catch"](0);
                              reject(_context10.t2);

                            case 25:
                            case "end":
                              return _context10.stop();
                          }
                        }
                      }, _callee10, null, [[0, 22]]);
                    }));

                    return function (_x4, _x5) {
                      return _ref5.apply(this, arguments);
                    };
                  }());
                }

                return _context11.abrupt("return", this.populated);

              case 3:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function populate() {
        return _populate2.apply(this, arguments);
      }

      return populate;
    }()
  }], [{
    key: "isConstructorFunction",
    value: function isConstructorFunction(fn) {
      return (fn === null || fn === void 0 ? void 0 : fn.__TYPE__) === 'FUNCTION:CONSTRUCTOR';
    }
  }]);

  return ConstructorFunction;
}(ContractFunction);

function ensureInterface(abi) {
  if (abi$1.Interface.isInterface(abi)) {
    return abi;
  }

  return new abi$1.Interface(abi);
}

function deploy(contract, bytecode) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var options = resolveFunctionOptions.apply(void 0, args);
  var constructor = contract.abi.deploy;
  var fn = new ConstructorFunction(contract, constructor, options);
  var hex = ethers.utils.hexlify(bytecode !== null && bytecode !== void 0 ? bytecode : '', {
    allowMissingPrefix: true
  });
  return fn.bytecode(hex).send();
} // TODO: Add types and proxies for event handling.

var Contract = /*#__PURE__*/function () {
  function Contract(abi, address, provider) {
    _classCallCheck(this, Contract);

    _defineProperty(this, "address", void 0);

    _defineProperty(this, "abi", void 0);

    _defineProperty(this, "deployment", void 0);

    _defineProperty(this, "__TYPE__", 'CONTRACT');

    _defineProperty(this, "_signer", undefined);

    _defineProperty(this, "_provider", undefined);

    this.address = resolveAddress(address);
    this.abi = ensureInterface(abi);

    if (ethers.Signer.isSigner(provider)) {
      this._signer = provider;
    } else if (ethers.providers.Provider.isProvider(provider)) {
      this._provider = provider;
    } else {
      throw new Error('Missing provider');
    }

    var names = Object.values(this.abi.functions).reduce(function (carry, current) {
      if (!carry[current.name]) {
        carry[current.name] = current;
      }

      return carry;
    }, {});
    return new Proxy(this, {
      get: function get(target, prop, receiver) {
        var _prop$includes, _names$prop;

        if (Reflect.has(target, prop)) {
          return Reflect.get(target, prop, receiver);
        } // Do not attempt to call `getFunction` for non-signatures.


        if (!names[prop] && !(prop !== null && prop !== void 0 && (_prop$includes = prop.includes) !== null && _prop$includes !== void 0 && _prop$includes.call(prop, '('))) {
          return;
        }

        if (typeof prop !== 'string') {
          return;
        }

        var fragment = (_names$prop = names[prop]) !== null && _names$prop !== void 0 ? _names$prop : target.abi.getFunction(prop);
        var instance = ContractFunction.create(target, fragment); // eslint-disable-next-line @typescript-eslint/no-empty-function

        return new Proxy(function () {}, {
          apply: function apply(_, __, args) {
            // eslint-disable-next-line prefer-spread
            var fn = instance.args.apply(instance, args);

            if (ConstructorFunction.isConstructorFunction(fn)) {
              return fn.send();
            }

            if (SendFunction.isSendFunction(fn)) {
              return fn.send();
            }

            if (CallFunction.isCallFunction(fn)) {
              return fn.call();
            }

            throw new Error('Invalid function call');
          },
          get: function get(_, prop, receiver) {
            return Reflect.get(instance, prop, receiver);
          },
          has: function has(_, prop) {
            return Reflect.has(instance, prop);
          },
          set: function set(_, prop, receiver) {
            return Reflect.set(instance, prop, receiver);
          }
        });
      }
    });
  }

  _createClass(Contract, [{
    key: "signer",
    get: function get() {
      return this._signer;
    }
  }, {
    key: "provider",
    get: function get() {
      var _this$_provider, _this$signer;

      var provider = (_this$_provider = this._provider) !== null && _this$_provider !== void 0 ? _this$_provider : (_this$signer = this.signer) === null || _this$signer === void 0 ? void 0 : _this$signer.provider;

      if (!provider) {
        throw new Error('Missing provider');
      }

      return provider;
    }
  }, {
    key: "clone",
    value: function clone(address, provider) {
      return new Contract(this.abi, address, provider);
    }
  }, {
    key: "attach",
    value: function attach(address) {
      var _this$signer2;

      var provider = (_this$signer2 = this.signer) !== null && _this$signer2 !== void 0 ? _this$signer2 : this.provider;
      return this.clone(address, provider);
    }
  }, {
    key: "connect",
    value: function connect(provider) {
      return this.clone(this.address, provider);
    }
  }], [{
    key: "isContract",
    value: function isContract(contract) {
      return (contract === null || contract === void 0 ? void 0 : contract.__TYPE__) === 'CONTRACT';
    }
  }]);

  return Contract;
}();

function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var DoppelgangerCompilerOutput = {
  abi: [{
    inputs: [{
      internalType: 'bytes4[]',
      name: '_sighashes',
      type: 'bytes4[]'
    }, {
      internalType: 'string[]',
      name: '_signatures',
      type: 'string[]'
    }],
    stateMutability: 'nonpayable',
    type: 'constructor'
  }, {
    stateMutability: 'payable',
    type: 'fallback'
  }, {
    inputs: [{
      internalType: 'bytes',
      name: '_data',
      type: 'bytes'
    }, {
      internalType: 'address',
      name: '_callee',
      type: 'address'
    }],
    name: '__doppelganger__mockForward',
    outputs: [{
      internalType: 'bytes',
      name: '',
      type: 'bytes'
    }],
    stateMutability: 'nonpayable',
    type: 'function'
  }, {
    inputs: [{
      internalType: 'bytes',
      name: '_data',
      type: 'bytes'
    }],
    name: '__doppelganger__mockReset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }, {
    inputs: [{
      internalType: 'bytes',
      name: '_data',
      type: 'bytes'
    }, {
      internalType: 'bytes',
      name: '_value',
      type: 'bytes'
    }],
    name: '__doppelganger__mockReturns',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }, {
    inputs: [{
      internalType: 'bytes',
      name: '_data',
      type: 'bytes'
    }, {
      internalType: 'string',
      name: '_reason',
      type: 'string'
    }],
    name: '__doppelganger__mockReverts',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }],
  bytecode: '60806040523480156200001157600080fd5b50604051620018a3380380620018a38339818101604052810190620000379190620003a4565b80518251146200007e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000759062000459565b60405180910390fd5b60008090505b82518110156200016f576040518060400160405280600115158152602001838381518110620000af57fe5b602002602001015181525060016000858481518110620000cb57fe5b60200260200101517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010190805190602001906200015d92919062000178565b50905050808060010191505062000084565b505050620005b5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001bb57805160ff1916838001178555620001ec565b82800160010185558215620001ec579182015b82811115620001eb578251825591602001919060010190620001ce565b5b509050620001fb9190620001ff565b5090565b6200022491905b808211156200022057600081600090555060010162000206565b5090565b90565b600082601f8301126200023957600080fd5b8151620002506200024a82620004a9565b6200047b565b915081818352602084019350602081019050838560208402820111156200027657600080fd5b60005b83811015620002aa57816200028f888262000331565b84526020840193506020830192505060018101905062000279565b5050505092915050565b600082601f830112620002c657600080fd5b8151620002dd620002d782620004d2565b6200047b565b9150818183526020840193506020810190508360005b838110156200032757815186016200030c888262000348565b845260208401935060208301925050600181019050620002f3565b5050505092915050565b60008151905062000342816200059b565b92915050565b600082601f8301126200035a57600080fd5b8151620003716200036b82620004fb565b6200047b565b915080825260208301602083018583830111156200038e57600080fd5b6200039b83828462000565565b50505092915050565b60008060408385031215620003b857600080fd5b600083015167ffffffffffffffff811115620003d357600080fd5b620003e18582860162000227565b925050602083015167ffffffffffffffff811115620003ff57600080fd5b6200040d85828601620002b4565b9150509250929050565b600062000426601a8362000528565b91507f5369676e617475726573206c656e677468206d69736d617463680000000000006000830152602082019050919050565b60006020820190508181036000830152620004748162000417565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200049f57600080fd5b8060405250919050565b600067ffffffffffffffff821115620004c157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115620004ea57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156200051357600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60005b838110156200058557808201518184015260208101905062000568565b8381111562000595576000848401525b50505050565b620005a68162000539565b8114620005b257600080fd5b50565b6112de80620005c56000396000f3fe6080604052600436106100435760003560e01c80630ad4c242146100d75780634de8e4aa146101005780638863f50a146101295780638a85047f1461015257610044565b5b61004c610ae0565b61005461018f565b9050600115158160400151151514156100c757806060015160405160200161007c9190611102565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100be9190611146565b60405180910390fd5b6100d48160200151610750565b50005b3480156100e357600080fd5b506100fe60048036038101906100f99190610e23565b610758565b005b34801561010c57600080fd5b5061012760048036038101906101229190610d86565b61087e565b005b34801561013557600080fd5b50610150600480360381019061014b9190610e98565b6108f6565b005b34801561015e57600080fd5b5061017960048036038101906101749190610dcb565b610a1c565b6040516101869190611124565b60405180910390f35b610197610ae0565b60008080366040516101aa9291906110c7565b604051809103902081526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff16151515158152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561027f5780601f106102545761010080835404028352916020019161027f565b820191906000526020600020905b81548152906001019060200180831161026257829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561033c5780601f106103115761010080835404028352916020019161033c565b820191906000526020600020905b81548152906001019060200180831161031f57829003601f168201915b5050505050815250509050600115158160000151151514156103605780905061074d565b60008080357fffffffff000000000000000000000000000000000000000000000000000000001660405160200161039791906110ac565b6040516020818303038152906040528051906020012081526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff16151515158152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105375780601f1061050c57610100808354040283529160200191610537565b820191906000526020600020905b81548152906001019060200180831161051a57829003601f168201915b50505050508152505090506001151581600001511515141561055b5780905061074d565b610563610b0c565b6001600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff16151515158152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b5050505050815250509050600115158160000151151514156107125780602001516040516020016106c791906110e0565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107099190611146565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074490611168565b60405180910390fd5b90565b805160208201f35b604051806080016040528060011515815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000151581526020016040518060200160405280600081525081525060008086866040516107e59291906110c7565b6040518091039020815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001019080519060200190610837929190610b28565b5060408201518160020160006101000a81548160ff0219169083151502179055506060820151816003019080519060200190610874929190610ba8565b5090505050505050565b60008083836040516108919291906110c7565b60405180910390208152602001908152602001600020600080820160006101000a81549060ff02191690556001820160006108cc9190610c28565b6002820160006101000a81549060ff02191690556003820160006108f09190610c70565b50505050565b604051806080016040528060011515815260200160405180602001604052806000815250815260200160011515815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525060008086866040516109839291906110c7565b6040518091039020815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010190805190602001906109d5929190610b28565b5060408201518160020160006101000a81548160ff0219169083151502179055506060820151816003019080519060200190610a12929190610ba8565b5090505050505050565b6060600060608373ffffffffffffffffffffffffffffffffffffffff168686604051610a499291906110c7565b6000604051808303816000865af19150503d8060008114610a86576040519150601f19603f3d011682016040523d82523d6000602084013e610a8b565b606091505b5091509150818190610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca9190611146565b60405180910390fd5b5080925050509392505050565b604051806080016040528060001515815260200160608152602001600015158152602001606081525090565b6040518060400160405280600015158152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b6957805160ff1916838001178555610b97565b82800160010185558215610b97579182015b82811115610b96578251825591602001919060010190610b7b565b5b509050610ba49190610cb8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610be957805160ff1916838001178555610c17565b82800160010185558215610c17579182015b82811115610c16578251825591602001919060010190610bfb565b5b509050610c249190610cb8565b5090565b50805460018160011615610100020316600290046000825580601f10610c4e5750610c6d565b601f016020900490600052602060002090810190610c6c9190610cb8565b5b50565b50805460018160011615610100020316600290046000825580601f10610c965750610cb5565b601f016020900490600052602060002090810190610cb49190610cb8565b5b50565b610cda91905b80821115610cd6576000816000905550600101610cbe565b5090565b90565b600081359050610cec81611291565b92915050565b60008083601f840112610d0457600080fd5b8235905067ffffffffffffffff811115610d1d57600080fd5b602083019150836001820283011115610d3557600080fd5b9250929050565b60008083601f840112610d4e57600080fd5b8235905067ffffffffffffffff811115610d6757600080fd5b602083019150836001820283011115610d7f57600080fd5b9250929050565b60008060208385031215610d9957600080fd5b600083013567ffffffffffffffff811115610db357600080fd5b610dbf85828601610cf2565b92509250509250929050565b600080600060408486031215610de057600080fd5b600084013567ffffffffffffffff811115610dfa57600080fd5b610e0686828701610cf2565b93509350506020610e1986828701610cdd565b9150509250925092565b60008060008060408587031215610e3957600080fd5b600085013567ffffffffffffffff811115610e5357600080fd5b610e5f87828801610cf2565b9450945050602085013567ffffffffffffffff811115610e7e57600080fd5b610e8a87828801610cf2565b925092505092959194509250565b60008060008060408587031215610eae57600080fd5b600085013567ffffffffffffffff811115610ec857600080fd5b610ed487828801610cf2565b9450945050602085013567ffffffffffffffff811115610ef357600080fd5b610eff87828801610d3c565b925092505092959194509250565b610f1e610f19826111e8565b611276565b82525050565b6000610f3083856111af565b9350610f3d838584611234565b82840190509392505050565b6000610f5482611188565b610f5e818561119e565b9350610f6e818560208601611243565b610f7781611280565b840191505092915050565b6000610f8d82611193565b610f9781856111ba565b9350610fa7818560208601611243565b610fb081611280565b840191505092915050565b6000610fc682611193565b610fd081856111cb565b9350610fe0818560208601611243565b80840191505092915050565b6000610ff96016836111cb565b91507f4d6f636b206e6f7420696e697469616c697a65643a20000000000000000000006000830152601682019050919050565b60006110396014836111ba565b91507f4d6f636b206e6f7420696e697469616c697a65640000000000000000000000006000830152602082019050919050565b6000611079600d836111cb565b91507f4d6f636b207265766572743a20000000000000000000000000000000000000006000830152600d82019050919050565b60006110b88284610f0d565b60048201915081905092915050565b60006110d4828486610f24565b91508190509392505050565b60006110eb82610fec565b91506110f78284610fbb565b915081905092915050565b600061110d8261106c565b91506111198284610fbb565b915081905092915050565b6000602082019050818103600083015261113e8184610f49565b905092915050565b600060208201905081810360008301526111608184610f82565b905092915050565b600060208201905081810360008301526111818161102c565b9050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006111e182611214565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015611261578082015181840152602081019050611246565b83811115611270576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61129a816111d6565b81146112a557600080fd5b5056fea26469706673582212204ac09faa1a1d38bcdcf828133c19367684c6e5cfb99c24f8a211ba6f5319e2e864736f6c63430006080033'
};
var bytecode = DoppelgangerCompilerOutput.bytecode;
var abi = DoppelgangerCompilerOutput.abi;
var Doppelganger = /*#__PURE__*/function (_Contract) {
  _inherits(Doppelganger, _Contract);

  var _super = _createSuper$1(Doppelganger);

  function Doppelganger() {
    _classCallCheck(this, Doppelganger);

    return _super.apply(this, arguments);
  }

  _createClass(Doppelganger, null, [{
    key: "deploy",
    value: function () {
      var _deploy2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee(signer) {
        var address,
            contract,
            _len,
            args,
            _key,
            receipt,
            _args = arguments;

        return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                address = ethers.constants.AddressZero;
                contract = new Doppelganger(abi, address, signer);

                for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = _args[_key];
                }

                _context.next = 5;
                return deploy.apply(void 0, [contract, bytecode ].concat(args));

              case 5:
                receipt = _context.sent;
                return _context.abrupt("return", contract.attach(receipt.contractAddress));

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function deploy$1(_x) {
        return _deploy2.apply(this, arguments);
      }

      return deploy$1;
    }()
  }]);

  return Doppelganger;
}(Contract);

function stub(doppelganger, contract, func, params) {
  var encoder = ethers.utils.defaultAbiCoder;
  return {
    given: function given() {
      for (var _len = arguments.length, input = new Array(_len), _key = 0; _key < _len; _key++) {
        input[_key] = arguments[_key];
      }

      return stub(doppelganger, contract, func, input);
    },
    reset: function () {
      var _reset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee() {
        var _func$inputs;

        var args, data;
        return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                args = params ? resolveArguments((_func$inputs = func.inputs) !== null && _func$inputs !== void 0 ? _func$inputs : [], params) : undefined;
                data = args ? contract.abi.encodeFunctionData(func, args) : contract.abi.getSighash(func);
                return _context.abrupt("return", doppelganger.__doppelganger__mockReset(data));

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function reset() {
        return _reset.apply(this, arguments);
      }

      return reset;
    }(),
    returns: function () {
      var _returns = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee2() {
        var _func$inputs2, _func$outputs, _func$outputs2;

        var formatted,
            args,
            data,
            _len2,
            output,
            _key2,
            resolved,
            encoded,
            _args2 = arguments;

        return _regeneratorRuntime__default['default'].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (func.outputs) {
                  _context2.next = 3;
                  break;
                }

                formatted = func.format();
                throw new Error("Attempting to mock return value of function with no outputs: ".concat(formatted));

              case 3:
                args = params ? resolveArguments((_func$inputs2 = func.inputs) !== null && _func$inputs2 !== void 0 ? _func$inputs2 : [], params) : undefined;
                data = args ? contract.abi.encodeFunctionData(func, args) : contract.abi.getSighash(func);

                for (_len2 = _args2.length, output = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                  output[_key2] = _args2[_key2];
                }

                resolved = output !== null && output !== void 0 && output.length ? resolveArguments((_func$outputs = func.outputs) !== null && _func$outputs !== void 0 ? _func$outputs : [], output) : undefined;
                encoded = encoder.encode((_func$outputs2 = func.outputs) !== null && _func$outputs2 !== void 0 ? _func$outputs2 : [], resolved);
                return _context2.abrupt("return", doppelganger.__doppelganger__mockReturns(data, encoded));

              case 9:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function returns() {
        return _returns.apply(this, arguments);
      }

      return returns;
    }(),
    reverts: function () {
      var _reverts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee3(reason) {
        var _func$inputs3;

        var args, data;
        return _regeneratorRuntime__default['default'].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                args = params ? resolveArguments((_func$inputs3 = func.inputs) !== null && _func$inputs3 !== void 0 ? _func$inputs3 : [], params) : undefined;
                data = args ? contract.abi.encodeFunctionData(func, args) : contract.abi.getSighash(func);
                return _context3.abrupt("return", doppelganger.__doppelganger__mockReverts(data, reason));

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function reverts(_x) {
        return _reverts.apply(this, arguments);
      }

      return reverts;
    }()
  };
}

function mock(_x2) {
  return _mock.apply(this, arguments);
}

function _mock() {
  _mock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee5(contract) {
    var functions, hashes, signatures, doppelganger, forward, mocked, proxy;
    return _regeneratorRuntime__default['default'].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            if (contract.signer) {
              _context5.next = 2;
              break;
            }

            throw new Error('Missing signer');

          case 2:
            functions = Object.values(contract.abi.functions);
            hashes = functions.map(function (fragment) {
              return contract.abi.getSighash(fragment);
            });
            signatures = functions.map(function (fragment) {
              return fragment.format();
            });
            _context5.next = 7;
            return Doppelganger.deploy(contract.signer, hashes, signatures);

          case 7:
            doppelganger = _context5.sent;

            forward = /*#__PURE__*/function () {
              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee4(subject) {
                var _fragment$outputs;

                var fn,
                    fragment,
                    callee,
                    _len3,
                    params,
                    _key3,
                    args,
                    data,
                    forward,
                    receipt,
                    refined,
                    result,
                    decoded,
                    _args4 = arguments;

                return _regeneratorRuntime__default['default'].wrap(function _callee4$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        fn = ContractFunction.isContractFunction(subject) ? subject : typeof subject === 'function' && ContractFunction.isContractFunction(subject) ? subject.ref : undefined;

                        if (!(fn == null)) {
                          _context4.next = 3;
                          break;
                        }

                        throw new Error('Not a valid contract function');

                      case 3:
                        if (!ConstructorFunction.isConstructorFunction(fn)) {
                          _context4.next = 5;
                          break;
                        }

                        throw new Error('Constructor functions are not supported');

                      case 5:
                        fragment = fn.fragment;
                        callee = fn.contract;

                        for (_len3 = _args4.length, params = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
                          params[_key3 - 1] = _args4[_key3];
                        }

                        args = params ? resolveArguments(fragment.inputs, params) : undefined;
                        data = args ? fn.contract.abi.encodeFunctionData(fragment, args) : fn.contract.abi.getSighash(fragment);
                        forward = doppelganger.__doppelganger__mockForward.args(data, callee);

                        if (!SendFunction.isSendFunction(fn)) {
                          _context4.next = 18;
                          break;
                        }

                        _context4.next = 14;
                        return forward.send();

                      case 14:
                        receipt = _context4.sent;
                        refined = receipt;
                        refined["function"] = fn;
                        return _context4.abrupt("return", refined);

                      case 18:
                        _context4.next = 20;
                        return forward.call();

                      case 20:
                        result = _context4.sent;
                        decoded = fn.contract.abi.decodeFunctionResult(fragment, result);

                        if (!(((_fragment$outputs = fragment.outputs) === null || _fragment$outputs === void 0 ? void 0 : _fragment$outputs.length) === 1)) {
                          _context4.next = 24;
                          break;
                        }

                        return _context4.abrupt("return", decoded[0]);

                      case 24:
                        return _context4.abrupt("return", decoded);

                      case 25:
                      case "end":
                        return _context4.stop();
                    }
                  }
                }, _callee4);
              }));

              return function forward(_x3) {
                return _ref.apply(this, arguments);
              };
            }();

            mocked = contract.attach(doppelganger.address);
            mocked.forward = forward;
            proxy = new Proxy(mocked, {
              get: function get(target, prop, receiver) {
                var value = Reflect.get(target, prop, receiver);
                var fn = value === null || value === void 0 ? void 0 : value.ref;

                if (!ContractFunction.isContractFunction(fn)) {
                  return value;
                }

                var extend = stub(doppelganger, mocked, fn.fragment);
                return new Proxy(value, {
                  get: function get(target, prop, receiver) {
                    if (Reflect.has(target, prop)) {
                      return Reflect.get(target, prop, receiver);
                    }

                    return Reflect.get(extend, prop, receiver);
                  }
                });
              }
            });
            return _context5.abrupt("return", proxy);

          case 13:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _mock.apply(this, arguments);
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
// Expose a default contract factory for convenience.
function contract(bytecode) {
  return function (signatures) {
    var resolved;

    var SpecializedContract = /*#__PURE__*/function (_Contract) {
      _inherits(SpecializedContract, _Contract);

      var _super = _createSuper(SpecializedContract);

      function SpecializedContract(address, provider) {
        _classCallCheck(this, SpecializedContract);

        return _super.call(this, SpecializedContract.abi, address, provider);
      }

      _createClass(SpecializedContract, [{
        key: "clone",
        value: function clone(address, provider) {
          return new SpecializedContract(address, provider);
        }
      }], [{
        key: "bytecode",
        get: function get() {
          return bytecode;
        }
      }, {
        key: "abi",
        get: function get() {
          if (resolved == null) {
            var abi = signatures.join('').trim().split('\n').map(function (item) {
              return item.trim();
            });
            resolved = ensureInterface(abi);
          }

          return resolved;
        }
      }, {
        key: "deploy",
        value: function () {
          var _deploy2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee(signer) {
            var address,
                contract,
                _len,
                args,
                _key,
                receipt,
                instance,
                _args = arguments;

            return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    address = ethers.constants.AddressZero;
                    contract = new SpecializedContract(address, signer);

                    for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                      args[_key - 1] = _args[_key];
                    }

                    _context.next = 5;
                    return deploy.apply(void 0, [contract, bytecode !== null && bytecode !== void 0 ? bytecode : '0x'].concat(args));

                  case 5:
                    receipt = _context.sent;
                    instance = contract.attach(receipt.contractAddress);
                    instance.deployment = receipt;
                    return _context.abrupt("return", instance);

                  case 9:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));

          function deploy$1(_x) {
            return _deploy2.apply(this, arguments);
          }

          return deploy$1;
        }()
      }, {
        key: "mock",
        value: function mock$1(signer) {
          var address = ethers.constants.AddressZero;
          var contract = new SpecializedContract(address, signer);
          return mock(contract);
        }
      }]);

      return SpecializedContract;
    }(Contract);

    return SpecializedContract;
  };
}

function randomAddress() {
  var address = ethers.utils.hexlify(ethers.utils.randomBytes(20));
  return ethers.utils.getAddress(address);
}

function sameAddress(a, b) {
  return resolveAddress(a) === resolveAddress(b);
}

function ensureEvent(event, abi) {
  if (abi$1.EventFragment.isEventFragment(event)) {
    return event;
  }

  if (typeof event === 'string') {
    if (event.indexOf('(') !== -1) {
      return abi$1.EventFragment.from(event);
    }

    var fragment = abi === null || abi === void 0 ? void 0 : abi.getEvent(event);

    if (fragment != null) {
      return fragment;
    }
  }

  throw new Error('Failed to resolve event');
}

function extractEvent(receipt, event) {
  var _receipt$logs;

  var contract = receipt["function"].contract.abi;
  var fragment = ensureEvent(event, contract);
  var abi = new ethers.utils.Interface([fragment]);
  var topic = abi.getEventTopic(fragment);
  var matches = ((_receipt$logs = receipt.logs) !== null && _receipt$logs !== void 0 ? _receipt$logs : []).filter(function (item) {
    return item.topics.includes(topic);
  }).map(function (log) {
    return abi.parseLog(log);
  });
  return matches;
}

exports.CallFunction = CallFunction;
exports.ConstructorFunction = ConstructorFunction;
exports.Contract = Contract;
exports.ContractFunction = ContractFunction;
exports.SendFunction = SendFunction;
exports.contract = contract;
exports.deploy = deploy;
exports.ensureEvent = ensureEvent;
exports.ensureInterface = ensureInterface;
exports.extractEvent = extractEvent;
exports.isFunctionOptions = isFunctionOptions;
exports.mock = mock;
exports.randomAddress = randomAddress;
exports.resolveAddress = resolveAddress;
exports.resolveArguments = resolveArguments;
exports.resolveFunctionOptions = resolveFunctionOptions;
exports.sameAddress = sameAddress;
