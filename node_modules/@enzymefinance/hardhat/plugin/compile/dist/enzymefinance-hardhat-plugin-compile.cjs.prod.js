'use strict';

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var codegen = require('@enzymefinance/codegen');
var deepmerge = require('deepmerge');
var ethers = require('ethers');
var fs = require('fs-extra');
var config = require('hardhat/config');
var path = require('path');
var utils = require('../../../dist/utils-b5b932a9.cjs.prod.js');
require('@babel/runtime/helpers/slicedToArray');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _regeneratorRuntime__default = /*#__PURE__*/_interopDefault(_regeneratorRuntime);
var deepmerge__default = /*#__PURE__*/_interopDefault(deepmerge);
var fs__default = /*#__PURE__*/_interopDefault(fs);
var path__default = /*#__PURE__*/_interopDefault(path);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
config.extendConfig(function (config, userConfig) {
  var _userConfig$codeGener;

  var defaults = {
    abi: {
      enabled: true,
      path: './abi'
    },
    bytecode: {
      enabled: true,
      path: './bytecode'
    },
    clear: false,
    enabled: false,
    exclude: [],
    include: [],
    options: {
      ignoreContractsWithoutAbi: false,
      ignoreContractsWithoutBytecode: false,
      ignoreExternalContracts: true
    },
    typescript: {
      enabled: true,
      path: './typescript'
    }
  };
  var provided = (_userConfig$codeGener = userConfig.codeGenerator) !== null && _userConfig$codeGener !== void 0 ? _userConfig$codeGener : {};
  config.codeGenerator = deepmerge__default['default'](defaults, provided);
  config.codeGenerator.abi.path = utils.validateDir(config.paths.root, config.codeGenerator.abi.path);
  config.codeGenerator.bytecode.path = utils.validateDir(config.paths.root, config.codeGenerator.bytecode.path);
  config.codeGenerator.typescript.path = utils.validateDir(config.paths.root, config.codeGenerator.typescript.path);
  config.codeGenerator.include = config.codeGenerator.include.map(function (item) {
    return utils.regexOrString(item);
  });
  config.codeGenerator.exclude = config.codeGenerator.exclude.map(function (item) {
    return utils.regexOrString(item);
  });
});
config.task('compile', /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee4(args, env, parent) {
    var config, _ref2, abi, bytecode, typescript, dirs, paths, artifacts;

    return _regeneratorRuntime__default['default'].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return parent(args);

          case 2:
            config = env.config.codeGenerator;

            if (config.enabled) {
              _context4.next = 5;
              break;
            }

            return _context4.abrupt("return");

          case 5:
            if (!(!config.abi.enabled && !config.bytecode.enabled && !config.typescript.enabled)) {
              _context4.next = 7;
              break;
            }

            return _context4.abrupt("return");

          case 7:
            _ref2 = [config.abi.enabled && config.abi.path, config.bytecode.enabled && config.bytecode.path, config.typescript.enabled && config.typescript.path], abi = _ref2[0], bytecode = _ref2[1], typescript = _ref2[2];
            dirs = [abi, bytecode, typescript].filter(function (item, index, array) {
              return !!item && array.indexOf(item) === index;
            });

            if (!(config.clear || args.clear)) {
              _context4.next = 12;
              break;
            }

            _context4.next = 12;
            return Promise.all(dirs.map( /*#__PURE__*/function () {
              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee(dir) {
                return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        return _context.abrupt("return", utils.clearDirectory(dir));

                      case 1:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              }));

              return function (_x4) {
                return _ref3.apply(this, arguments);
              };
            }()));

          case 12:
            _context4.next = 14;
            return Promise.all(dirs.map( /*#__PURE__*/function () {
              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee2(dir) {
                return _regeneratorRuntime__default['default'].wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        return _context2.abrupt("return", utils.createDirectory(dir));

                      case 1:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2);
              }));

              return function (_x5) {
                return _ref4.apply(this, arguments);
              };
            }()));

          case 14:
            _context4.next = 16;
            return env.artifacts.getArtifactPaths();

          case 16:
            paths = _context4.sent.map(function (artifact) {
              return {
                name: path__default['default'].basename(artifact, '.json'),
                path: artifact
              };
            }).filter(function (outer, index, array) {
              return array.findIndex(function (inner) {
                return inner.name === outer.name;
              }) === index;
            });
            _context4.next = 19;
            return Promise.all(paths.map( /*#__PURE__*/function () {
              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee3(item) {
                var artifact, source, external, included, excluded;
                return _regeneratorRuntime__default['default'].wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        _context3.next = 2;
                        return env.artifacts.readArtifact(item.name);

                      case 2:
                        artifact = _context3.sent;
                        source = path__default['default'].join(env.config.paths.root, artifact.sourceName);
                        _context3.next = 6;
                        return fs__default['default'].pathExists(source);

                      case 6:
                        external = !_context3.sent;
                        included = config.include.some(function (rule) {
                          return typeof rule === 'string' ? item.name === rule : item.name.match(rule) != null;
                        });
                        excluded = config.exclude.some(function (rule) {
                          return typeof rule === 'string' ? item.name === rule : item.name.match(rule) != null;
                        });
                        return _context3.abrupt("return", _objectSpread(_objectSpread({}, item), {}, {
                          artifact: artifact,
                          excluded: excluded,
                          external: external,
                          included: included
                        }));

                      case 10:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3);
              }));

              return function (_x6) {
                return _ref5.apply(this, arguments);
              };
            }()));

          case 19:
            artifacts = _context4.sent;
            artifacts = artifacts.filter(function (item) {
              return item.excluded && !item.included ? false : true;
            });

            if (config.options.ignoreContractsWithoutAbi) {
              artifacts = artifacts.filter(function (item) {
                return item.included || item.artifact.abi.length > 0;
              });
            }

            if (config.options.ignoreContractsWithoutBytecode) {
              artifacts = artifacts.filter(function (item) {
                return item.included || item.artifact.bytecode !== '0x';
              });
            }

            if (config.options.ignoreExternalContracts) {
              artifacts = artifacts.filter(function (item) {
                return item.included || !item.external;
              });
            }

            if (artifacts.length) {
              _context4.next = 27;
              break;
            }

            console.error("None of the compiled contract artifacts matched your include/exclude rules for code generation.");
            return _context4.abrupt("return");

          case 27:
            _context4.next = 29;
            return Promise.all([abi && generateAbiFiles(abi, artifacts), bytecode && generateBytecodeFiles(bytecode, artifacts), typescript && generateTypeScriptFiles(typescript, artifacts)]);

          case 29:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function (_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}()).addFlag('clear', 'Clears previous build artifacts.');

function generateAbiFiles(_x7, _x8) {
  return _generateAbiFiles.apply(this, arguments);
}

function _generateAbiFiles() {
  _generateAbiFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee6(dir, artifacts) {
    return _regeneratorRuntime__default['default'].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return Promise.all(artifacts.map( /*#__PURE__*/function () {
              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee5(artifact) {
                var destination;
                return _regeneratorRuntime__default['default'].wrap(function _callee5$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        destination = path__default['default'].resolve(dir, "".concat(artifact.name, ".json"));
                        _context5.next = 3;
                        return fs__default['default'].writeJson(destination, artifact.artifact.abi, {
                          spaces: 2
                        });

                      case 3:
                        return _context5.abrupt("return", _context5.sent);

                      case 4:
                      case "end":
                        return _context5.stop();
                    }
                  }
                }, _callee5);
              }));

              return function (_x13) {
                return _ref6.apply(this, arguments);
              };
            }()));

          case 2:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _generateAbiFiles.apply(this, arguments);
}

function generateBytecodeFiles(_x9, _x10) {
  return _generateBytecodeFiles.apply(this, arguments);
}

function _generateBytecodeFiles() {
  _generateBytecodeFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee8(dir, artifacts) {
    return _regeneratorRuntime__default['default'].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return Promise.all(artifacts.map( /*#__PURE__*/function () {
              var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee7(artifact) {
                var destination, content;
                return _regeneratorRuntime__default['default'].wrap(function _callee7$(_context7) {
                  while (1) {
                    switch (_context7.prev = _context7.next) {
                      case 0:
                        destination = path__default['default'].resolve(dir, "".concat(artifact.name, ".bin.json"));
                        content = {
                          bytecode: artifact.artifact.bytecode
                        };
                        _context7.next = 4;
                        return fs__default['default'].writeJson(destination, content, {
                          spaces: 2
                        });

                      case 4:
                        return _context7.abrupt("return", _context7.sent);

                      case 5:
                      case "end":
                        return _context7.stop();
                    }
                  }
                }, _callee7);
              }));

              return function (_x14) {
                return _ref7.apply(this, arguments);
              };
            }()));

          case 2:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _generateBytecodeFiles.apply(this, arguments);
}

function generateTypeScriptFiles(_x11, _x12) {
  return _generateTypeScriptFiles.apply(this, arguments);
}

function _generateTypeScriptFiles() {
  _generateTypeScriptFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee10(dir, artifacts) {
    return _regeneratorRuntime__default['default'].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return Promise.all(artifacts.map( /*#__PURE__*/function () {
              var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee9(artifact) {
                var abi, content, formatted, destination;
                return _regeneratorRuntime__default['default'].wrap(function _callee9$(_context9) {
                  while (1) {
                    switch (_context9.prev = _context9.next) {
                      case 0:
                        abi = new ethers.utils.Interface(artifact.artifact.abi);
                        content = codegen.generateContract(artifact.name, artifact.artifact.bytecode, abi);
                        formatted = codegen.formatOutput(content);
                        destination = path__default['default'].join(dir, "".concat(artifact.name, ".ts"));
                        _context9.next = 6;
                        return fs__default['default'].writeFile(destination, formatted);

                      case 6:
                        return _context9.abrupt("return", _context9.sent);

                      case 7:
                      case "end":
                        return _context9.stop();
                    }
                  }
                }, _callee9);
              }));

              return function (_x15) {
                return _ref8.apply(this, arguments);
              };
            }()));

          case 2:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _generateTypeScriptFiles.apply(this, arguments);
}
