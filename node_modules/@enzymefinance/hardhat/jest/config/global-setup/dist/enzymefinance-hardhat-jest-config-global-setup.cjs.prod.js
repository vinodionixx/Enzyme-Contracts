'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var fs = require('fs-extra');
var os = require('os');
var path = require('path');
var uuid = require('uuid');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _regeneratorRuntime__default = /*#__PURE__*/_interopDefault(_regeneratorRuntime);
var fs__default = /*#__PURE__*/_interopDefault(fs);
var os__default = /*#__PURE__*/_interopDefault(os);
var path__default = /*#__PURE__*/_interopDefault(path);

var globalSetup = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee() {
  return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = path__default['default'];
          _context.next = 3;
          return fs__default['default'].realpath(os__default['default'].tmpdir());

        case 3:
          _context.t1 = _context.sent;
          _context.t2 = uuid.v4();
          process.env.__HARDHAT_COVERAGE_TEMPDIR__ = _context.t0.join.call(_context.t0, _context.t1, _context.t2);

        case 6:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}));

exports.default = globalSetup;
