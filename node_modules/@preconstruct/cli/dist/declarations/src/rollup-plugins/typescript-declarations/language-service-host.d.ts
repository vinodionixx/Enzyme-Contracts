export declare function normalize(fileName: string): string;
export declare let createLanguageServiceHostClass: (typescript: any) => {
    new (parsedConfig: any, transformers: any): {
        parsedConfig: any;
        transformers: any;
        cwd: string;
        snapshots: any;
        versions: any;
        fileNames: any;
        service: any;
        reset(): void;
        setLanguageService(service: any): void;
        getProjectVersion(): string;
        setSnapshot(fileName: string, data: any): any;
        getScriptSnapshot(fileName: string): any;
        getCurrentDirectory(): string;
        getScriptVersion(fileName: string): any;
        getScriptFileNames(): string[];
        getCompilationSettings(): any;
        getDefaultLibFileName(opts: any): any;
        useCaseSensitiveFileNames(): any;
        readDirectory(path: string, extensions: any, exclude: any, include: any): any;
        readFile(path: string, encoding: string): any;
        fileExists(path: string): any;
        getTypeRootsVersion(): number;
        directoryExists(directoryName: string): any;
        getDirectories(directoryName: string): any;
        getCustomTransformers(): any;
    };
};
